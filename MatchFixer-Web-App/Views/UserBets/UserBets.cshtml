@model IEnumerable<MatchFixer.Core.DTOs.Bets.UserBetSlipDTO>

@{
	var pending = Model.Where(x => x.Status == "Pending").ToList();
	var won = Model.Where(x => x.Status == "Won").ToList();
	var lost = Model.Where(x => x.Status == "Lost").ToList();
}

<div class="game-background"></div>

<div class="border-0 rounded-4 p-4 flex-fill">
	@if (TempData["SuccessMessage"] != null)
	{
		<div class="alert success-message" id="success-message">
			@TempData["SuccessMessage"]
		</div>
	}

	@if (TempData["ErrorMessage"] != null)
	{
		<div class="alert error-message" id="error-message">
			@TempData["ErrorMessage"]
		</div>
	}

</div>

<div class="card custom-card custom-betslip-card shadow-lg rounded-4 p-4">
	<ul class="nav nav-tabs mb-4" id="betSlipTabs" role="tablist">
		<li class="nav-item" role="presentation">
			<button class="nav-link active" id="pending-tab" data-bs-toggle="tab" data-bs-target="#pending" type="button" role="tab">Pending</button>
		</li>
		<li class="nav-item" role="presentation">
			<button class="nav-link" id="won-tab" data-bs-toggle="tab" data-bs-target="#won" type="button" role="tab">Won</button>
		</li>
		<li class="nav-item" role="presentation">
			<button class="nav-link" id="lost-tab" data-bs-toggle="tab" data-bs-target="#lost" type="button" role="tab">Lost</button>
		</li>
	</ul>

	<div class="tab-content" id="betSlipTabContent">
		<div class="tab-pane fade show active" id="pending" role="tabpanel">
			@await Html.PartialAsync("_BetSlipList", pending)
		</div>
		<div class="tab-pane fade" id="won" role="tabpanel">
			@await Html.PartialAsync("_BetSlipList", won)
		</div>
		<div class="tab-pane fade" id="lost" role="tabpanel">
			@await Html.PartialAsync("_BetSlipList", lost)
		</div>
	</div>
</div>