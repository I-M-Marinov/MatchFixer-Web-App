@using MatchFixer.Core.ViewModels.LogoQuiz
@model LogoQuizQuestionViewModel

<div class="background-profile"></div>

<div class="border-0 rounded-4 p-4 flex-fill">
	@if (TempData["SuccessMessage"] != null)
	{
		<div class="alert success-message" id="success-message">
			@TempData["SuccessMessage"]
		</div>
	}

	@if (TempData["ErrorMessage"] != null)
	{
		<div class="alert error-message" id="error-message">
			@TempData["ErrorMessage"]
		</div>
	}

</div>



<div class="container d-flex flex-column justify-content-center align-items-center" style="min-height: 75vh;">

	<div class="quiz-card p-4" style="width: 100%; max-width: 600px;">
		
		<div class="logo-quiz-score d-flex flex-column justify-content-center align-items-center">
			<p>Your score: <span class="score-number">@Model.CurrentScore</span></p>
		</div>

		<div id="quiz-countdown">
			Next question in <span id="countdown-value">3</span> seconds...
		</div>

		<div class="card-body text-center">

			<h5 class="card-title mb-4">Guess whose is the logo below ?</h5>

			<div class="team-image-container text-center">
				<img src="@Model.LogoUrl" alt="Team Logo" class="img-fluid mb-4" style="max-height: 175px;"/>
			</div>

			<form method="post" asp-action="LogoQuiz">
				@Html.AntiForgeryToken()

				@foreach (var option in Model.OriginalOptions)
				{
					<input type="hidden" name="OriginalOptions" value="@option"/>
				}

				@foreach (var option in Model.Options)
				{
					string buttonClass = "btn mb-2 w-75 d-flex justify-content-center align-items-center";

					if (Model.IsCorrect.HasValue)
					{
						if (option == Model.CorrectAnswer)
							buttonClass += " btn-success w-75 mx-auto d-flex justify-content-center align-items-center";
						else if (option == Model.SelectedAnswer && option != Model.CorrectAnswer)
							buttonClass += " btn-danger w-75 mx-auto d-flex justify-content-center align-items-center";
						else
							buttonClass += " btn-gold w-75 mx-auto";
					}
					else
					{
						buttonClass += " btn-gold";
					}

					<button type="submit"
					        name="SelectedAnswer"
					        value="@option"
					        class="@buttonClass"
					        @(Model.IsCorrect.HasValue ? "disabled" : "")>
						<span>@option</span>

					</button>
				}

				<input type="hidden" name="CorrectAnswer" value="@Model.CorrectAnswer"/>
				<input type="hidden" name="LogoUrl" value="@Model.LogoUrl"/>
				<input type="hidden" name="SelectedAnswer" value="@Model.SelectedAnswer"/>

			</form>

			@if (Model.IsCorrect.HasValue)
			{
				<script>

					document.addEventListener("DOMContentLoaded", function () {
						const countdownContainer = document.getElementById("quiz-countdown");
						const countdownSpan = document.getElementById("countdown-value");

						if (countdownContainer) {
							countdownContainer.style.display = "block";
						}

						let secondsLeft = 3;
						const interval = setInterval(function () {
							secondsLeft--;
							if (countdownSpan) countdownSpan.textContent = secondsLeft;

							if (secondsLeft <= 0) {
								clearInterval(interval);
								document.getElementById('auto-next-form')?.submit();
							}
						}, 1000);
					});

				</script>
			}


		</div>

		<div class="mt-2 d-flex justify-content-center align-items-center" style="height: 50px;">

			<form method="get" asp-action="LogoQuiz" id="auto-next-form">
				<input type="hidden" name="currentScore" value="@Model.CurrentScore"/>
				<button type="submit" class="btn btn-primary px-4 guess-next-btn">
					<i class="bi bi-arrow-right-circle-fill"></i> Guess Next
				</button>
			</form>

		</div>
	</div>
</div>
