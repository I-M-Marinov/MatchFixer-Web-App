@using MatchFixer.Core.ViewModels.MatchGuessGame
@model MatchGuessGameViewModel

@{
	var isDerby = Model.IsDerby;
	var currentPointsPerAnswer = Model.Score >= 100 ? 20 : 10;
	var earnedPoints = (bool)isDerby ? currentPointsPerAnswer * 2 : currentPointsPerAnswer;
	var isAtMilestone = Model.Score == 40; // will become 50 after this question, then doubled to 100
}


@if (Model.IsAnswered)
{

	<div class="d-flex justify-content-center mt-4" id="answer-result-container">
		<div class="alert alert-info d-flex flex-column align-items-center text-center" style="max-width: 600px;" id="answer-result">
			<span id="countdown" class="position-absolute top-0 end-0 badge bg-secondary m-1">5</span>

			@if (Model.IsCorrect == true)
			{
				<div id="correctGuess" class="d-flex justify-content-center mt-2 bg-success w-50">
					<strong>Correct!</strong>
				</div>

				<p class="mt-3">
					You earned @earnedPoints points.
				</p>

				@if (isAtMilestone)
				{
					<p class="mt-2">
						One more correct answer to double your points!
					</p>
				}
				else if (Model.Score == 100)
				{
					<p class="mt-2">
						You've doubled your points! Let's keep going!
					</p>
				}

				@if (isDerby == true)
				{
					<p class="mt-2">
						Good job guessing that derby match!
					</p>
				}
			}
			else
			{
				@if (Model.Score >= 100)
				{
					<p class="d-flex justify-content-center mb-2">You've already doubled your points, but you can do better...</p>
				}

				<div id="incorrectGuess" class="d-flex justify-content-center align-items-center mt-3 bg-warning w-50">
					<strong>Incorrect !</strong>
				</div>
				<div class="d-flex justify-content-center mt-2">
					The actual score was:
				</div>
				<div class="d-flex justify-content-center mt-2">
					<div class="d-flex justify-content-center align-items-center mt-2 flex-wrap gap-2">
						<strong class="mx-2">@Model.HomeTeam</strong>
						<span class="badge bg-secondary fs-5">@Model.ActualHomeScore</span>
						<span class="mx-2">-</span>
						<span class="badge bg-secondary fs-5">@Model.ActualAwayScore</span>
						<strong class="mx-2">@Model.AwayTeam</strong>
					</div>				
				</div>

			}
		</div>
	</div>

	<form id="nextQuestionForm" method="get" asp-action="Start"></form>

	<script>
			document.addEventListener("DOMContentLoaded", function () {
			let seconds = 5;
			const countdown = document.getElementById('countdown');
			const overlay = document.getElementById('cardOverlay');

			// show overlay

			if (overlay) {
				overlay.style.display = 'block';
			}

			// disable inputs and buttons

			document.querySelectorAll('.custom-card input, .custom-card button').forEach(el => {
				el.disabled = true;
			});

			const interval = setInterval(() => {
				seconds--;
				countdown.textContent = seconds;
				if (seconds <= 0) {
					clearInterval(interval);

					// hide overlay and re-enable inputs 

					if (overlay) {
						overlay.style.display = 'none';
					}
					document.querySelectorAll('.custom-card input, .custom-card button').forEach(el => {
						el.disabled = false;
					});
				}
			}, 1000);

			setTimeout(() => {
				window.dispatchEvent(new Event("hideMainTimer"));
			}, 0);

			setTimeout(() => {
				document.getElementById('nextQuestionForm').submit();
			}, 5000);
		});
	</script>
}
