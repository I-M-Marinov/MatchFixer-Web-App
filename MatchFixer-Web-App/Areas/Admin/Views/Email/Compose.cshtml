@using MatchFixer_Web_App.Areas.Admin.ViewModels.Email
@model MatchFixer_Web_App.Areas.Admin.ViewModels.Email.EmailBlastCommand
@{
    Layout = "/Areas/Admin/Views/Shared/_Layout.Admin.cshtml";
    ViewData["Title"] = "Email Blast";
    var roles = (IEnumerable<string>)(ViewBag.Roles ?? Array.Empty<string>());
    var count = ViewBag.RecipientCount as int?;
    var previewHtml = ViewBag.PreviewHtml as string;

    bool showRole = Model.Mode == EmailBlastCommand.RecipientMode.Role;
    bool showStatus = Model.Mode == EmailBlastCommand.RecipientMode.Status;

    bool isAll    = Model.Mode == EmailBlastCommand.RecipientMode.All;
    bool isRole   = Model.Mode == EmailBlastCommand.RecipientMode.Role;
    bool isStatus = Model.Mode == EmailBlastCommand.RecipientMode.Status;
    bool isSingle = Model.Mode == EmailBlastCommand.RecipientMode.Single;
}

<div class="admin-users-background"></div>

<div class="border-0 rounded-4 p-3">
    @if (TempData["SuccessMessage"] is string s)
    {
        <div class="alert alert-success shadow-sm mb-3">@s</div>
    }
    @if (TempData["ErrorMessage"] is string e)
    {
        <div class="alert alert-danger shadow-sm mb-3">@e</div>
    }

    <div class="card shadow-sm border-0 rounded-4 admin-email-compose-card">
        <div class="card-body">
            <h5 class="card-title mb-3"><i class="bi bi-megaphone me-2"></i>Email Blast</h5>

            <!-- MAIN FORM: Preview & count -->
            <form asp-area="Admin" asp-controller="Email" asp-action="Preview" method="post" class="row g-3" id="audience-form">
                @Html.AntiForgeryToken()

                <div class="col-12 audience-container">
                    <label class="form-label">Audience filter</label>
                    <div class="d-flex flex-wrap gap-2 justify-content-center align-items-center pb-4">
	                    <div class="btn-group flex-wrap" role="group" aria-label="Audience">
		                    <input type="radio" class="btn-check" name="Mode" id="audAll" value="All" @(isAll ? "checked" : "") autocomplete="off">
		                    <label class="btn btn-outline-success" for="audAll">All users</label>

		                    <input type="radio" class="btn-check" name="Mode" id="audRole" value="Role" @(isRole ? "checked" : "") autocomplete="off">
		                    <label class="btn btn-outline-success" for="audRole">By Role</label>

		                    <input type="radio" class="btn-check" name="Mode" id="audStatus" value="Status" @(isStatus ? "checked" : "") autocomplete="off">
		                    <label class="btn btn-outline-success" for="audStatus">By Status</label>

		                    @if (Model.UserId.HasValue)
		                    {
			                    <input type="radio" class="btn-check" name="Mode" id="audSingle" value="Single" @(isSingle ? "checked" : "") autocomplete="off">
			                    <label class="btn btn-outline-success" for="audSingle">Single user</label>
		                    }
	                    </div>
                        
                    </div>
                </div>

                @if (Model.UserId.HasValue)
                {
                    <input type="hidden" name="UserId" value="@Model.UserId" />
                }

                <div class="role-status-emails-container">
                    <!-- Role dropdown -->
                    <div id="roleWrap"
                         class="col-md-3 @(showRole ? "" : "d-none")"
                         aria-hidden="@(showRole ? "false" : "true")" />
                    <label class="form-label">Select Role</label>
                        <select class="form-select" name="Role" id="roleSelect" @(showRole ? "" : "disabled")>
                            <option value="">-- choose role --</option>
                            @foreach (var r in roles)
                            {
                                <option value="@r" selected="@(Model.Role == r ? "selected" : null)">@r</option>
                            }
                        </select>
                    </div>

                    <!-- Status dropdown -->
                    <div id="statusWrap"
                         class="col-md-3 @(showStatus ? "" : "d-none")"
                         aria-hidden="@(showStatus ? "false" : "true")">
                        <label class="form-label">Select Status</label>
                        <select class="form-select" name="Status" id="statusSelect" @(showStatus ? "" : "disabled")>
                            <option value="">All</option>
                            <option value="active" selected="@(Model.Status == "active" ? "selected" : null)">Active</option>
                            <option value="unconfirmed" selected="@(Model.Status == "unconfirmed" ? "selected" : null)">Unconfirmed</option>
                            <option value="locked" selected="@(Model.Status == "locked" ? "selected" : null)">Locked</option>
                            <option value="deleted" selected="@(Model.Status == "deleted" ? "selected" : null)">Deleted</option>
                        </select>
                    </div>

                    <!-- Confirmed toggle -->
                    <div class="col-md-3 confirm-wrap">
                        <label class="form-label">Only confirmed emails</label>
                        <select class="form-select" name="OnlyConfirmed" id="onlyConfirmedSelect">
                            <option value="true" selected="@(Model.OnlyConfirmed ? "selected" : null)">Yes</option>
                            <option value="false" selected="@(!Model.OnlyConfirmed ? "selected" : null)">No (send anyway)</option>
                        </select>
                    </div>
                </div>


                <div class="col-md-8">
                    <label class="form-label">Subject</label>
                    <input class="form-control" name="Subject" value="@Model.Subject" required />
                </div>

                <div class="col-md-4">
                    <label class="form-label">Logo URL</label>
                    <input class="form-control" name="LogoUrl" value="@Model.LogoUrl" />
                </div>

                <div class="col-12">
                    <label class="form-label">Body (HTML allowed)</label>
                    <textarea class="form-control" name="BodyHtml" rows="8" required>@Model.BodyHtml</textarea>
                    <div class="form-text">Tip: keep it short; links should be absolute.</div>
                </div>

                <div class="col-12 d-flex gap-2">
                    <button type="submit" class="btn btn-outline-primary">
                        <i class="bi bi-eye me-1"></i> Preview & count
                    </button>
                </div>
            </form>

            @if (count.HasValue)
            {
                <div class="alert alert-info mt-3">
                    Estimated recipients: <strong>@count.Value</strong>
                </div>

                @* PREVIEW MODAL *@
                <div class="modal fade" id="previewModal" tabindex="-1" aria-labelledby="previewModalLabel" aria-hidden="true">
	                <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="previewModalLabel">
                                    Email preview
                                    @if (count.HasValue)
                                    {
                                        <small class="text-muted ms-2">(estimated recipients: @count.Value)</small>
                                    }
                                </h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>

                            <div class="modal-body" style="background:#fff">
                                @if (!string.IsNullOrWhiteSpace(previewHtml))
                                {
                                    @Html.Raw(previewHtml)
                                }
                                else
                                {
                                    <div class="text-muted">No preview available.</div>
                                }
                            </div>

                            <div class="modal-footer">
                                @* Send right from the modal *@
                                @if (count.HasValue && !string.IsNullOrWhiteSpace(previewHtml))
                                {
                                    <form asp-area="Admin" asp-controller="Email" asp-action="Send" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="Mode" value="@Model.Mode" />
                                        <input type="hidden" name="UserId" value="@Model.UserId" />
                                        <input type="hidden" name="Role" value="@Model.Role" />
                                        <input type="hidden" name="Status" value="@Model.Status" />
                                        <input type="hidden" name="OnlyConfirmed" value="@Model.OnlyConfirmed" />
                                        <input type="hidden" name="Subject" value="@Model.Subject" />
                                        <input type="hidden" name="BodyHtml" value="@Model.BodyHtml" />
                                        <input type="hidden" name="LogoUrl" value="@Model.LogoUrl" />
                                        <button class="btn btn-success">
                                            <i class="bi bi-send me-1"></i> Send now
                                        </button>
                                    </form>
                                }
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>
</div>

<script>
        (function () {
      const roleWrap     = document.getElementById('roleWrap');
      const statusWrap   = document.getElementById('statusWrap');
      const roleSelect   = document.getElementById('roleSelect');
      const statusSelect = document.getElementById('statusSelect');

      function toggleSection(showRole, showStatus) {
        roleWrap.classList.toggle('d-none', !showRole);
        statusWrap.classList.toggle('d-none', !showStatus);
        roleSelect.disabled   = !showRole;
        statusSelect.disabled = !showStatus;
      }

      function updateFromRadios() {
        const mode = (document.querySelector('input[name="Mode"]:checked') || {}).value || 'All';
        toggleSection(mode === 'Role', mode === 'Status');
      }

      document.querySelectorAll('input[name="Mode"]').forEach(r => {
        r.addEventListener('change', updateFromRadios);
      });

      updateFromRadios();
    })();
</script>

@* Auto-open preview modal when we have content *@
@if (count.HasValue && !string.IsNullOrWhiteSpace(previewHtml))
{
	<script>
        (function () {
            var el = document.getElementById('previewModal');
            if (!el) return;
            var modal = new bootstrap.Modal(el);
            modal.show();
        })();
    </script>
}
