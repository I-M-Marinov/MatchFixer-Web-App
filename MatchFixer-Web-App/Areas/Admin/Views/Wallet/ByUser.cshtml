@model MatchFixer_Web_App.Areas.Admin.ViewModels.Wallet.AdminWalletViewModel

@{
    ViewData["Title"] = $"Wallet · {Model.UserName ?? Model.Email}";
    Layout = "/Areas/Admin/Views/Shared/_Layout.Admin.cshtml";
    var hasBalanceAfter = Model.Transactions?.Any(t => t.BalanceAfter != null) == true;
}

<div class="border-0 rounded-4 p-3">
    @* flash messages *@
    @if (TempData["SuccessMessage"] is string s)
    {
        <div class="alert alert-success shadow-sm mb-3">@s</div>
    }
    @if (TempData["ErrorMessage"] is string e)
    {
        <div class="alert alert-danger shadow-sm mb-3">@e</div>
    }

    <div class="card shadow-sm border-0 rounded-4 admin-user-wallet-card">
        <div class="card-body">
            <h5 class="card-title mb-2">
                Wallet: @Model.UserName (@Model.Email)
                <span class="badge text-bg-secondary ms-2">@Model.Currency</span>
            </h5>

            @if (!Model.HasWallet)
            {
                <div class="alert alert-warning d-flex align-items-center justify-content-between mt-3 mb-0">
                    <div>This user hasn’t created a wallet yet.</div>
                    <form asp-area="Admin" asp-controller="Wallet" asp-action="Create" method="post" class="ms-3">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@Model.UserId" />
                        <button class="btn btn-sm btn-primary">
                            <i class="bi bi-wallet2 me-1"></i>Create wallet
                        </button>
                    </form>
                </div>
            }
            else
            {
                <div class="d-flex flex-wrap align-items-center justify-content-between my-3 gap-3">
                    <div class="fs-5 mb-0 badge bg-info2 p-4">
                        Balance: <strong> € @Model.Balance.ToString("0.00")</strong>
                    </div>

                    @* Quick admin adjustments: deposit / withdraw *@
                    <div class="d-flex justify-content-center flex-wrap align-items-center">
                        <form asp-area="Admin" asp-controller="Wallet" asp-action="Adjust" method="post" class="d-flex gap-3">
		                    @Html.AntiForgeryToken()
		                    <input type="hidden" name="id" value="@Model.UserId" />
		                    <div class="form-floating">
			                    <input type="number" step="0.01" min="0.01" class="form-control" id="amount" name="amount" placeholder="Amount" required />
			                    <label for="amount">Amount</label>
		                    </div>
		                    <div class="form-floating" style="min-width: 280px;">
			                    <input type="text" class="form-control" id="note" name="note" placeholder="Note (optional)" />
			                    <label for="note">Note (optional)</label>
		                    </div>

                            <div class="btn-group d-flex justify-content-center flex-wrap align-items-center">
                                <button type="submit" name="withdraw" value="false" class="btn btn-success">
				                    <i class="bi bi-plus-circle"></i> Deposit
			                    </button>
                                <button type="submit" name="withdraw" value="true" class="btn btn-danger">
				                    <i class="bi bi-dash-circle"></i> Withdraw
			                    </button>
		                    </div>
	                    </form>

	                    @* Clear visible history *@
	                    <form asp-area="Admin" asp-controller="Wallet" asp-action="ClearHistory" method="post" class="ms-auto">
		                    @Html.AntiForgeryToken()
		                    <input type="hidden" name="id" value="@Model.UserId" />
		                    <button class="btn btn-secondary m-3">
			                    <i class="bi bi-eraser"></i> Clear visible history
		                    </button>
	                    </form>
                    </div>
                </div>

                <div class="table-responsive mt-3">
                    <table class="table table-sm align-middle">
                        <thead>
                            <tr>
                                <th>When</th>
                                <th>Type</th>
                                <th class="text-end">Amount</th>
                                @if (hasBalanceAfter)
                                {
                                    <th class="text-end">Balance After</th>
                                }
                                <th>Note</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var t in Model.Transactions.OrderByDescending(x => x.CreatedUtc))
                            {
                                var when = t.DisplayTime ?? t.CreatedUtc.ToString("yyyy-MM-dd HH:mm");
                                var amtText = (t.Amount >= 0 ? "+" : "") + t.Amount.ToString("0.00");
                                var amtClass = t.Amount >= 0 ? "text-success" : "text-danger";
                                <tr>
                                    <td>@when</td>
                                    <td>@t.Type</td>
                                    <td class="text-end @amtClass">@amtText</td>
                                    @if (hasBalanceAfter)
                                    {
                                        <td class="text-end">@(t.BalanceAfter?.ToString("0.00") ?? "-")</td>
                                    }
                                    <td>@t.Note</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>
