@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<div class="bg"></div>
<div class="bg bg2"></div>
<div class="bg bg3"></div>

<div class="register-container">
	<form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="register-form">
		
		<img src="~/images/matchFixer-logo.png" id="register-logo" alt="Logo" class="logo" />

		<h2>Create an account</h2>
		<hr/>
		<div asp-validation-summary="ModelOnly" class="badge bg-info text-dark pt-2 centered-validation" role="alert"></div>

		<div class="form-floating mb-3">
			<input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com"/>
			<label asp-for="Input.Email">Email</label>
			<span asp-validation-for="Input.Email" class="badge bg-info text-dark pt-2 centered-validation"></span>
		</div>

		<div class="form-floating mb-3">
			<input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password"/>
			<label asp-for="Input.Password">Password</label>
			<span asp-validation-for="Input.Password" class="badge bg-info text-dark pt-2 centered-validation"></span>
		</div>

		<div class="form-floating mb-3">
			<input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="confirm password"/>
			<label asp-for="Input.ConfirmPassword">Retype Password</label>
			<span asp-validation-for="Input.ConfirmPassword" class="badge bg-info text-dark pt-2 centered-validation"></span>
		</div>
		
		<div class="button-wrapper">
			<button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
		</div>
		
		<div class="mt-3 login-links">
			<p>Already have an account ? <a asp-page="./Login" asp-route-returnUrl="@Model.ReturnUrl">Login</a></p>
		</div>


		@if ((Model.ExternalLogins?.Count ?? 0) > 0)
		{
			<hr/>
			<h5 class="text-center mt-4 mb-3">Or register with</h5>
			<div class="d-flex justify-content-center flex-wrap">
				@foreach (var provider in Model.ExternalLogins!)
				{
					<button type="submit" class="btn btn-outline-primary external-login-btn" name="provider" value="@provider.Name" title="Register using your @provider.DisplayName account">
						@provider.DisplayName
					</button>
				}
			</div>
		}
	</form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
